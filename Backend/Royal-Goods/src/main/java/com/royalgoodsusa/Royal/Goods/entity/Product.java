package com.royalgoodsusa.Royal.Goods.entity;

import com.royalgoodsusa.Royal.Goods.model.ProductStatus;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;

@Entity
@Table(name = "product")
@Data
@AllArgsConstructor
@NoArgsConstructor
@Builder
@EntityListeners(AuditingEntityListener.class)
public class Product {

    // Unique identifier for each product, auto-generated by the database
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    // Name of the product
    private String name;

    // Detailed description of the product
    private String description;

    // Price of the product using BigDecimal for precision in financial calculations
    private BigDecimal price;

    // List of URLs for product images, stored as a collection of strings in the database
    @ElementCollection
    private List<String> imageUrls;

    // Category to which the product belongs (e.g., Electronics, Men, Women)
    private String category;

    // Sub-category of the product (e.g., Mobile Phones under Electronics, Topwear)
    private String subCategory;
    @ElementCollection
    private List<String> sizes;

    // Quantity available in stock for the product
    //private int stockQuantity;

    // SKU (Stock Keeping Unit) for unique product identification within a category
    //private String sku;

    // Discount amount on the product price, if applicable
    //private BigDecimal discount;

    // Product rating, typically an average of customer reviews
    //private double rating;

    // Flag indicating if the product is a bestseller
    private boolean bestSeller;

    // Automatically populated with the timestamp when the product is created
    @CreatedDate // @CreatedDate: Populates createdAt when the entity is saved for the first time.
    private LocalDateTime createdAt;

    // Timestamp for the last time the product was updated, automatically managed by JPA
    @LastModifiedDate // @LastModifiedDate: Updates updatedAt each time the entity is modified and saved.
    private LocalDateTime updatedAt;

    // Enum to define the status of the product (e.g., AVAILABLE, OUT_OF_STOCK)
    //private ProductStatus status; // Enum for product availability status
}
